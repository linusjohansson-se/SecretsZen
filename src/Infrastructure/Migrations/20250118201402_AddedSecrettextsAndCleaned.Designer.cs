// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250118201402_AddedSecrettextsAndCleaned")]
    partial class AddedSecrettextsAndCleaned
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.SecretStrings.SecretText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AmountOfDays")
                        .HasColumnType("integer")
                        .HasColumnName("amount_of_days");

                    b.Property<int>("AmountOfViews")
                        .HasColumnType("integer")
                        .HasColumnName("amount_of_views");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiration_date");

                    b.Property<string>("SecretString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secret_string");

                    b.Property<bool>("UnlimitedTime")
                        .HasColumnType("boolean")
                        .HasColumnName("unlimited_time");

                    b.Property<bool>("UnlimitedViews")
                        .HasColumnType("boolean")
                        .HasColumnName("unlimited_views");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("Views")
                        .HasColumnType("integer")
                        .HasColumnName("views");

                    b.HasKey("Id")
                        .HasName("pk_secret_texts");

                    b.ToTable("secret_texts", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
